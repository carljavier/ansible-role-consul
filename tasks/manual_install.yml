---
- name: installing consul dependencies via yum
  yum:
    name:
      - unzip
      - curl
    state: present
    update_cache: yes
  when: ansible_pkg_mgr == 'yum'

- name: installing consul dependencies via apt
  apt:
    name:
      - unzip
      - curl
    state: present
    update_cache: yes
  when: ansible_pkg_mgr == 'apt'

- name: creating consul group
  group:
    name: '{{ consul_group }}'
    system: yes
  when: consul_create_account
  
- name: creating consul user
  user:
    name: '{{ consul_user }}'
    home: '{{ consul_home_directory }}'
    group: '{{ consul_group }}'
    shell: /sbin/nologin
    system: yes
  when: consul_create_account

- name: creating consul directories
  file:
    state: directory
    path: '{{ item }}'
    owner: '{{ consul_user }}'
    group: '{{ consul_group }}'
    mode: '0750'
  with_items:
  - '{{ consul_home_directory }}'
  - '{{ consul_data_directory }}'
  - '{{ consul_install_directory }}'

- name: installing consul binary from remote
  unarchive:
    src: '{{ consul_download }}'
    dest: '{{ consul_install_directory }}'
    owner: '{{ consul_user }}'
    group: '{{ consul_group }}'
    remote_src: yes
    mode: '0770'
  notify:
    - restart consul
  when: not consul_local_binary

- name: installing consul binary from local
  copy:
    src: '{{ consul_local_binary_location }}'
    dest: '{{ consul_install_directory }}/{{ consul_local_binary_location | basename }}'
    owner: '{{ consul_user }}'
    group: '{{ consul_group }}'
    mode: '0770'
  notify:
    - restart consul
  when: consul_local_binary

- name: create TLS directory
  file:
    state: directory
    path: '{{ consul_tls_directory }}'
    owner: '{{ consul_user }}'
    group: '{{ consul_group }}'
    mode: '0750'
  when: consul_tls_enabled

- name: copying over TLS certificates
  copy:
    src: '{{ item }}'
    dest: '{{ consul_tls_directory }}/{{ item | basename }}'
    owner: '{{ consul_user }}'
    group: '{{ consul_group }}'
    mode: '0640'
  with_items:
    - '{{ consul_tls_ca_file }}'
    - '{{ consul_tls_cert_file }}'
    - '{{ consul_tls_key_file }}'
  when: consul_tls_enabled
  notify:
    - restart consul

- name: templating out consul configuration
  template:
    src: consul.hcl.j2
    dest: '{{ consul_config_file }}'
    owner: '{{ consul_user }}'
    group: '{{ consul_group }}'
    mode: '0640'
  notify:
    - restart consul

- name: templating out consul server configuration
  template:
    src: server.hcl.j2
    dest: '{{ consul_server_file }}'
    owner: '{{ consul_user }}'
    group: '{{ consul_group }}'
    mode: '0640'
  when: "'consul' in group_names"
  notify:
    - restart consul

- name: templating out systemd script
  template:
    src: consul.systemd.j2
    dest: /etc/systemd/system/consul.service
    owner: root
    group: root
    mode: '0640'
  notify:
    - reload consul daemon

- name: starting and enabling consul
  systemd:
    name: consul
    enabled: yes
    state: started
